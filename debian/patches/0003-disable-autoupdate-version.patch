From: Leon Bogaert <leon@tim-online.nl>
Date: Sun, 2 Feb 2014 20:39:29 +0100
Subject: disable-autoupdate-version

---
 files/conf.maldet         | 16 ---------
 files/internals/functions | 84 -----------------------------------------------
 files/maldet              |  4 ---
 4 files changed, 110 deletions(-)

--- a/files/conf.maldet
+++ b/files/conf.maldet
@@ -33,22 +33,6 @@
 # [0 = disabled, 1 = enabled]
 autoupdate_signatures="1"
 
-# This controls the daily automatic updates of the LMD installation.
-# The installation update process preserves all configuration options
-# along with custom signature and cleaner files. It is recommended that
-# this be enabled to ensure the latest version, features and bug fixes
-# are always available.
-# [0 = disabled, 1 = enabled]
-autoupdate_version="0"
-
-# This controls validating the LMD executable MD5 hash with known
-# good upstream hash value. This allows LMD to replace the the
-# executable / force a reinstalltion in the event the LMD executable
-# is tampered with or corrupted. If you intend to make customizations
-# to the LMD executable, you should disable this feature.
-# [0 = disabled, 1 = enabled]
-autoupdate_version_hashed="1"
-
 # When defined, the import_config_url option allows a configuration file to be
 # downloaded from a remote URL. The local conf.maldet and internals.conf are
 # parsed followed by the imported configuration file. As such, only variables
--- a/files/internals/functions
+++ b/files/internals/functions
@@ -237,7 +237,7 @@
       [-f|--file-list PATH] [-i|--include-regex] [-x|--exclude-regex]
       [-b|--background] [-m|--monitor] [-k|--kill-monitor][-c|--checkout]
       [-q|--quarantine] [-s|--restore] [-n|--clean] [-l|--log] [-e|--report]
-      [-u|--update-sigs] [-d|--update-ver]
+      [-u|--update-sigs]
 EOF
 }
 
@@ -252,9 +252,6 @@
     -u, --update-sigs
        Update malware detection signatures from rfxn.com
 
-    -d, --update-ver
-       Update the installed version from rfxn.com
-
     -f, --file-list
        Scan files or paths defined in line spaced file
        e.g: maldet -f /root/scan_file_list
@@ -1414,90 +1411,6 @@
         fi
 }
 
-
-lmdup() {
-tmpwd="$tmpdir/.lmdup.$RANDOM.$$"
-upstreamver="$tmpwd/.lmdup_vercheck.$$"
-mkdir -p $tmpwd ; chmod 700 $tmpwd
-
-eout "{update} checking for available updates..." 1
-
-$wget --referer="$lmd_referer" -q -T$wget_timeout -t$wget_retries "$lmd_version_url" -O $upstreamver >> /dev/null 2>&1
-if [ -s "$upstreamver" ]; then
-	installedver=`echo $ver | tr -d '.'`
-	if [ "$(echo $installedver | wc -L)" -eq "2" ]; then
-		installedver="${installedver}0"
-	fi
-	upstreamver_readable=`cat $upstreamver`
-	upstreamver=`cat $upstreamver | tr -d '.'`
-	if [ "$upstreamver" -gt "$installedver" ]; then
-		eout "{update} new version $upstreamver_readable found, updating..." 1
-		doupdate=1
-	elif [ "$autoupdate_version_hashed" == "1" ]; then
-		eout "{update} hashing install files and checking against server..." 1
-		$md5sum $inspath/maldet | awk '{print$1}' | tr '\n' ' ' | tr -d ' ' > $lmd_hash_file
-		upstreamhash=$tmpwd/.lmdup_hashcheck$$
-		$wget --referer="$lmd_referer" -q -T$wget_timeout -t$wget_retries "$lmd_hash_url" -O $upstreamhash >> /dev/null 2>&1
-		if [ -s "$upstreamhash" ]; then
-			installed_hash=`cat $lmd_hash_file`
-			current_hash=`cat $upstreamhash`
-			if [ ! "$installed_hash" == "$current_hash" ]; then
-				eout "{update} version check shows latest but hash check failed, forcing update..." 1
-				doupdate=1
-			else
-				eout "{update} latest version already installed." 1
-			fi
-		else
-			eout "{update} could not download upstream hash file ($lmd_hash_url), please try again later." 1
-			cd $inspath ; rm -rf $tmpwd
-			exit 1
-		fi
-	else
-                eout "{update} no updates available, latest version already installed." 1
-	fi
-else
-	eout "{update} could not download version file from server, please try again later." 1
-	cd $inspath ; rm -rf $tmpwd
-	exit 1
-fi
-if [ "$doupdate" ]; then
-       	cd $tmpwd/
-	$wget --referer="$lmd_referer" -q -T$wget_timeout -t$wget_retries "http://cdn.rfxn.com/downloads/maldetect-current.tar.gz" -O "$tmpwd/maldetect-current.tar.gz"
-	$wget --referer="$lmd_referer" -q -T$wget_timeout -t$wget_retries "http://cdn.rfxn.com/downloads/maldetect-current.tar.gz.md5" -O "$tmpwd/maldetect-current.tar.gz.md5"
-	if [ -s "$tmpwd/maldetect-current.tar.gz.md5" ] && [ -s "$tmpwd/maldetect-current.tar.gz" ]; then
-		upstream_md5=`cat $tmpwd/maldetect-current.tar.gz.md5 | awk '{print$1}'`
-		local_md5=`$md5sum $tmpwd/maldetect-current.tar.gz | awk '{print$1}'`
-		if [ ! "$upstream_md5" == "$local_md5" ]; then
-			eout "{update} unable to verify md5sum of maldetect-current.tar.gz, update failed!" 1
-			cd $inspath ; rm -rf $tmpwd
-			exit 1
-		else
-			eout "{update} verified md5sum of maldetect-current.tar.gz" 1
-		fi
-	else
-		eout "{update} could not download maldetect-current.tar.gz or .md5, please try again later." 1
-		cd $inspath ; rm -rf $tmpwd
-		exit 1
-	fi
-        if [ -s "$tmpwd/maldetect-current.tar.gz" ]; then
-                tar xfz maldetect-current.tar.gz
-                cd maldetect-*
-                chmod 750 install.sh
-                sh -c './install.sh' >> /dev/null 2>&1
-                cp -f $inspath.last/sigs/custom.* $inspath/sigs/ 2> /dev/null
-                cp -f $inspath.last/clean/custom.* $inspath/clean/ 2> /dev/null
-                eout "{update} completed update v$ver => v$upstreamver_readable, running signature updates..." 1
-                $inspath/maldet --update 1
-                eout "{update} update and config import completed" 1
-        else
-        	eout "{update} could not download maldetect-current.tar.gz, please try again later." 1
-		cd $inspath ; rm -rf $tmpwd
-		exit 1
-	fi
-fi
-cd $inspath ; rm -rf $tmpwd
-}
-
 sigup() {
 eout "{sigup} performing signature update check..." 1
 
--- a/files/maldet
+++ b/files/maldet
@@ -236,10 +236,6 @@
 		header
 		purge
 	;;
-	-d|--update-ver|--update-version)
-		header
-		lmdup
-	;;
 	-u|--update|--update-sigs)
 		shift
 		if [ ! "$1" == "1" ]; then
